# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2019-05-07 19:57
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AGMminutes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('location', models.CharField(max_length=200)),
                ('minutes', models.FileField(blank=True, null=True, upload_to='AGMminutes')),
            ],
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('heading', models.TextField()),
                ('text', models.TextField(null=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='announcements')),
                ('showonhome', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='ArchiveComp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comp_name', models.CharField(max_length=400)),
                ('winner1', models.CharField(blank=True, max_length=200, null=True)),
                ('winner2', models.CharField(blank=True, max_length=200, null=True)),
                ('winner3', models.CharField(blank=True, max_length=200, null=True)),
                ('runnerup1', models.CharField(blank=True, max_length=200, null=True)),
                ('runnerup2', models.CharField(blank=True, max_length=200, null=True)),
                ('runnerup3', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArchiveDivision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('division_name', models.CharField(max_length=20)),
                ('winner', models.CharField(max_length=100)),
                ('runner_up', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ArchiveSeason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(max_length=50)),
                ('year', models.IntegerField()),
                ('gender', models.CharField(max_length=20)),
                ('season', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comptype', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CupComp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CupFixture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('homescore', models.IntegerField()),
                ('awayscore', models.IntegerField()),
                ('date', models.DateField()),
                ('resultentered', models.BooleanField(default=False)),
                ('resultverified', models.BooleanField(default=False)),
                ('walkover', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CupRound',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('roundnumber', models.IntegerField()),
                ('comp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.CupComp')),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1)),
                ('singlesbestoflegs', models.IntegerField()),
                ('doublesbestoflegs', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='DoublesMatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('homescore', models.IntegerField(default=0)),
                ('awayscore', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Doubles Match',
                'verbose_name_plural': 'Doubles Matches',
            },
        ),
        migrations.CreateModel(
            name='DoublesResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('played', models.IntegerField(default=1)),
                ('win', models.IntegerField()),
                ('lose', models.IntegerField()),
                ('legs_for', models.IntegerField()),
                ('legs_against', models.IntegerField()),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.DoublesMatch')),
            ],
        ),
        migrations.CreateModel(
            name='Fixture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('homescore', models.IntegerField(default=0)),
                ('awayscore', models.IntegerField(default=0)),
                ('date', models.DateField()),
                ('resultentered', models.BooleanField(default=False)),
                ('resultverified', models.BooleanField(default=False)),
                ('resultsheet', models.ImageField(blank=True, null=True, upload_to='resultSheets')),
                ('walkover', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='FixtureFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='fixtures')),
            ],
        ),
        migrations.CreateModel(
            name='KeyDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('name', models.CharField(max_length=400)),
                ('location', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='LeagueGrp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(max_length=100)),
                ('season', models.CharField(max_length=100)),
                ('year', models.IntegerField()),
                ('displayyear', models.CharField(max_length=10)),
                ('active', models.BooleanField(default=True)),
                ('finished', models.BooleanField()),
            ],
            options={
                'verbose_name': 'League',
                'verbose_name_plural': 'Leagues',
            },
        ),
        migrations.CreateModel(
            name='Maximum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.Fixture')),
            ],
        ),
        migrations.CreateModel(
            name='MiscFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_uploaded', models.DateTimeField()),
                ('description', models.CharField(max_length=300)),
                ('file', models.FileField(upload_to='files')),
            ],
        ),
        migrations.CreateModel(
            name='NoOfAnnouncements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='photo_galleries')),
            ],
        ),
        migrations.CreateModel(
            name='PhotoGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('coverphoto', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coverphoto', to='PandDDL.Photo')),
                ('photos', models.ManyToManyField(related_name='photos', to='PandDDL.Photo')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=100)),
                ('surname', models.CharField(max_length=100)),
                ('iscaptain', models.BooleanField()),
                ('dateadded', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='PointsDeduction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField()),
                ('reason', models.CharField(max_length=500)),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_reported', models.DateTimeField()),
                ('reporter_email', models.CharField(blank=True, max_length=300, null=True)),
                ('problem_desc', models.CharField(max_length=2000)),
                ('completed', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entered_by', models.CharField(max_length=100)),
                ('proposal', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('played', models.IntegerField(default=1)),
                ('win', models.IntegerField()),
                ('lose', models.IntegerField()),
                ('legs_for', models.IntegerField()),
                ('legs_against', models.IntegerField()),
                ('points', models.IntegerField()),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.Fixture')),
            ],
        ),
        migrations.CreateModel(
            name='SinglesMatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('homescore', models.IntegerField(default=0)),
                ('awayscore', models.IntegerField(default=0)),
                ('awayplayer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='away', to='PandDDL.Player')),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.Fixture')),
                ('homeplayer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='home', to='PandDDL.Player')),
            ],
            options={
                'verbose_name': 'Singles Match',
                'verbose_name_plural': 'Singles Matches',
            },
        ),
        migrations.CreateModel(
            name='SinglesResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('played', models.IntegerField(default=1)),
                ('win', models.IntegerField()),
                ('lose', models.IntegerField()),
                ('legs_for', models.IntegerField()),
                ('legs_against', models.IntegerField()),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.SinglesMatch')),
                ('opposition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='opposition', to='PandDDL.Player')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='singlesplayer', to='PandDDL.Player')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=300)),
                ('pubphoneno', models.CharField(max_length=20)),
                ('captainphoneno', models.CharField(max_length=20)),
                ('paidleaguefee', models.BooleanField(default=False)),
                ('newpassword', models.BooleanField()),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.Division')),
            ],
        ),
        migrations.CreateModel(
            name='TopFinish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finish', models.IntegerField()),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.Fixture')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.Player')),
            ],
            options={
                'verbose_name': 'Top Finish',
                'verbose_name_plural': 'Top Finishes',
            },
        ),
        migrations.CreateModel(
            name='TopScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.Fixture')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.Player')),
            ],
        ),
        migrations.CreateModel(
            name='TriplesMatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('homescore', models.IntegerField(default=0)),
                ('awayscore', models.IntegerField(default=0)),
                ('awayplayer1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taway1', to='PandDDL.Player')),
                ('awayplayer2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taway2', to='PandDDL.Player')),
                ('awayplayer3', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taway3', to='PandDDL.Player')),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.Fixture')),
                ('homeplayer1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thome1', to='PandDDL.Player')),
                ('homeplayer2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thome2', to='PandDDL.Player')),
                ('homeplayer3', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thome3', to='PandDDL.Player')),
            ],
            options={
                'verbose_name': 'Triples Match',
                'verbose_name_plural': 'Triples Matches',
            },
        ),
        migrations.CreateModel(
            name='TriplesResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('played', models.IntegerField(default=1)),
                ('win', models.IntegerField()),
                ('lose', models.IntegerField()),
                ('legs_for', models.IntegerField()),
                ('legs_against', models.IntegerField()),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.TriplesMatch')),
                ('opposition1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topposition1', to='PandDDL.Player')),
                ('opposition2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topposition2', to='PandDDL.Player')),
                ('opposition3', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topposition3', to='PandDDL.Player')),
                ('partner1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partner1', to='PandDDL.Player')),
                ('partner2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partner2', to='PandDDL.Player')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='triplesplayer', to='PandDDL.Player')),
            ],
        ),
        migrations.AddField(
            model_name='result',
            name='opposition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opposition', to='PandDDL.Team'),
        ),
        migrations.AddField(
            model_name='result',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team', to='PandDDL.Team'),
        ),
        migrations.AddField(
            model_name='pointsdeduction',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.Team'),
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.Team'),
        ),
        migrations.AddField(
            model_name='maximum',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.Player'),
        ),
        migrations.AddField(
            model_name='keydate',
            name='league',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.LeagueGrp'),
        ),
        migrations.AddField(
            model_name='fixture',
            name='awayteam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away', to='PandDDL.Team'),
        ),
        migrations.AddField(
            model_name='fixture',
            name='division',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.Division'),
        ),
        migrations.AddField(
            model_name='fixture',
            name='hometeam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home', to='PandDDL.Team'),
        ),
        migrations.AddField(
            model_name='fixture',
            name='resultenteredby',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='doublesresult',
            name='opposition1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opposition1', to='PandDDL.Player'),
        ),
        migrations.AddField(
            model_name='doublesresult',
            name='opposition2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opposition2', to='PandDDL.Player'),
        ),
        migrations.AddField(
            model_name='doublesresult',
            name='partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partner', to='PandDDL.Player'),
        ),
        migrations.AddField(
            model_name='doublesresult',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doublesplayer', to='PandDDL.Player'),
        ),
        migrations.AddField(
            model_name='doublesmatch',
            name='awayplayer1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away1', to='PandDDL.Player'),
        ),
        migrations.AddField(
            model_name='doublesmatch',
            name='awayplayer2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away2', to='PandDDL.Player'),
        ),
        migrations.AddField(
            model_name='doublesmatch',
            name='fixture',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.Fixture'),
        ),
        migrations.AddField(
            model_name='doublesmatch',
            name='homeplayer1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home1', to='PandDDL.Player'),
        ),
        migrations.AddField(
            model_name='doublesmatch',
            name='homeplayer2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home2', to='PandDDL.Player'),
        ),
        migrations.AddField(
            model_name='division',
            name='leaguegrp',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.LeagueGrp'),
        ),
        migrations.AddField(
            model_name='cupfixture',
            name='awayteam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cupaway', to='PandDDL.Team'),
        ),
        migrations.AddField(
            model_name='cupfixture',
            name='hometeam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cuphome', to='PandDDL.Team'),
        ),
        migrations.AddField(
            model_name='cupfixture',
            name='resultenteredby',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cupfixture',
            name='round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.CupRound'),
        ),
        migrations.AddField(
            model_name='cupcomp',
            name='leaguegrp',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.LeagueGrp'),
        ),
        migrations.AddField(
            model_name='competition',
            name='keydate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.KeyDate'),
        ),
        migrations.AddField(
            model_name='competition',
            name='runnerup1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='runnerup1', to='PandDDL.Player'),
        ),
        migrations.AddField(
            model_name='competition',
            name='runnerup2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='runnerup2', to='PandDDL.Player'),
        ),
        migrations.AddField(
            model_name='competition',
            name='runnerup3',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='runnerup3', to='PandDDL.Player'),
        ),
        migrations.AddField(
            model_name='competition',
            name='winner1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='winner1', to='PandDDL.Player'),
        ),
        migrations.AddField(
            model_name='competition',
            name='winner2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='winner2', to='PandDDL.Player'),
        ),
        migrations.AddField(
            model_name='competition',
            name='winner3',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='winner3', to='PandDDL.Player'),
        ),
        migrations.AddField(
            model_name='archivedivision',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.ArchiveSeason'),
        ),
        migrations.AddField(
            model_name='archivecomp',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PandDDL.ArchiveSeason'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='gallery',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='PandDDL.PhotoGallery'),
        ),
        migrations.AddField(
            model_name='agmminutes',
            name='proposals',
            field=models.ManyToManyField(to='PandDDL.Proposal'),
        ),
    ]
